[
  {
    "Item1":"1. What is WebAssembly?",
    "Item2":"<p>WebAssembly is a low-level, assembly-like, and <strong>near-native performance</strong> language that can be run in modern web browsers, designed as a portable target for compilation of high-level languages like C# or Java.</p><p>It plays nicely with other technologies in the web platform and it can be faster than JavaScript in the correct use cases such as computationally intensive tasks.</p><p>WebAssembly is a <strong>complement to JavaScript</strong>, not a replacement.</p>"
  },
  {
    "Item1":"2. What languages does WebAssembly support?",
    "Item2":"<p><strong>C#</strong>, Java, TypeScript, Go, Rust, among others.</p>"
  },
  {
    "Item1":"3. Why was WebAssembly created?",
    "Item2":"<p><strong>It's all about performance</strong>! Near-native performance is important in cases of porting video games, video editing, and 3D rendering to web apps.</p><p>WebAssembly was created as a <strong>complement to the current web platform</strong> and it aims to execute at native speed by taking advantage of common hardware capabilities available on a wide range of platforms.</p><p>Developing web apps will be more powerful and productive by writing in high-level non-JavaScript languages like C# or Java.</p>"
  },
  {
    "Item1":"4. What browsers support WebAssembly?",
    "Item2":"<p>Firefox, Chrome, Edge, Safari, Brave, and any other modern web browsers. IE does not support it!</p>"
  },
  {
    "Item1":"5. What's the conclusion?",
    "Item2":"<p>WebAssembly will play an important role in the web platform for the coming years.</p><p>It is already being used for all sorts of applications, ranging from gaming to porting desktop applications to the web, and is being used even outside the browser.</p> It will open many possibilities to <strong>enhance web performance</strong>, write web apps in <b>multiple programming languages</b> alongside JavaScript, and become an universal compilation target even outside the web.</p>"
  }
]