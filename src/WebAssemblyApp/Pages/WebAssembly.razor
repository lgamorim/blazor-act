@page "/webassembly"
@inject HttpClient Http

<PageTitle>WebAssembly | The Blazor Act</PageTitle>

<h3>WebAssembly<small class="text-muted"> in modern web browsers</small></h3>

<Pin InnerText="Blazor can run your client-side C# code directly in the browser, using WebAssembly."></Pin>

<div class="accordion" id="webassembly-accordion">
@for(var i = 0; i < webAssemblyData?.Count; i++)
{
  <div class="accordion-item" onclick="@IncrementClicks">
    <h2 class="accordion-header" id="webassembly-heading-@i">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#webassembly-collapse-@i" aria-expanded="false" aria-controls="webassembly-collapse-@i">
        @webAssemblyData?[i].Item1
      </button>
    </h2>
    <div id="webassembly-collapse-@i" class="accordion-collapse collapse" aria-labelledby="webassembly-heading-@i" data-bs-parent="#webassembly-accordion">
      <div class="accordion-body">
        @webAssemblyData?[i].Item2
      </div>
    </div>
  </div>
}
</div>

<div class="mt-3">
  <p role="status">Total clicks so far: <span class="badge bg-secondary">@totalClicks</span></p>
</div>

<Offcanvas/>

@code {
  private IList<Tuple<string, string>> webAssemblyData;
  private int totalClicks;

  protected override async Task OnInitializedAsync()
  {
    webAssemblyData = await Http.GetFromJsonAsync<IList<Tuple<string, string>>>("sample-data/WebAssembly.json");
  }

  private void IncrementClicks()
  {
    totalClicks++;
  }
}