@page "/webassembly"
@inject HttpClient Http

<PageTitle>WebAssembly | The Blazor Act</PageTitle>

<h3>WebAssembly<small class="text-muted"> in modern web browsers</small></h3>

<Pin InnerText="Blazor can run your client-side C# code directly in the browser, using WebAssembly."></Pin>

<div class="accordion" id="webassembly-accordion">
@{
  var line = 1;
  foreach(var entry in webAssemblyData)
  {
    <div class="accordion-item" onclick="@IncrementClicks">
      <h2 class="accordion-header" id="webassembly-heading-@line" @onmouseover="() => totalMouseOver++">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#webassembly-collapse-@line" aria-expanded="false" aria-controls="webassembly-collapse-@line">
          @entry?.Item1
        </button>
      </h2>
      <div id="webassembly-collapse-@line" class="accordion-collapse collapse" aria-labelledby="webassembly-heading-@line" data-bs-parent="#webassembly-accordion">
        <div class="accordion-body">
          @entry?.Item2
        </div>
      </div>
    </div>
    line++;
  }
}
</div>

<div class="mt-3">
  <p role="status">Total clicks so far: <span class="badge bg-info">@totalClicks</span> / <span class="badge bg-secondary">@totalMouseOver</span></p>
</div>

<Offcanvas/>

@code {
  private IList<Tuple<string, string>> webAssemblyData = new List<Tuple<string, string>>();
  private int totalClicks, totalMouseOver;

  protected override async Task OnInitializedAsync()
  {
    webAssemblyData = await Http.GetFromJsonAsync<IList<Tuple<string, string>>>("sample-data/WebAssembly.json");
  }

  private void IncrementClicks()
  {
    totalClicks++;
  }
}